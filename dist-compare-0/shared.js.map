{"version":3,"file":"shared.js","names":["statics: TemplateStringsArray","children: JsonML[]","statics: TemplateStringsArray","state: State","value: unknown","message?: string","html_tag: unique symbol","part: Displayable"],"sources":["../src/index.ts","../src/shared/lexer.ts","../src/shared.ts"],"sourcesContent":["import { html_tag, is_html } from './shared.ts'\n\nexport interface HTML {\n\t[html_tag]: true\n\t/* @internal */ _statics: TemplateStringsArray\n\t/* @internal */ _dynamics: unknown[]\n}\n\nexport function html(statics: TemplateStringsArray, ...dynamics: unknown[]): HTML {\n\treturn {\n\t\t[html_tag]: true,\n\t\t_dynamics: dynamics,\n\t\t_statics: statics,\n\t}\n}\n\nif (__DEV__) {\n\ttype JsonML = string | readonly [tag: string, attrs?: Record<string, any>, ...children: JsonML[]]\n\tinterface Formatter {\n\t\theader(value: unknown): JsonML | null\n\t\thasBody(value: unknown): boolean\n\t\tbody?(value: unknown): JsonML | null\n\t}\n\n\t;((globalThis as { devtoolsFormatters?: Formatter[] }).devtoolsFormatters ??= []).push({\n\t\theader(value) {\n\t\t\tif (!is_html(value)) return null\n\n\t\t\tconst children: JsonML[] = []\n\t\t\tfor (let i = 0; i < value._dynamics.length; i++)\n\t\t\t\tchildren.push(value._statics[i], ['object', { object: value._dynamics[i] }])\n\t\t\tchildren.push(value._statics[value._statics.length - 1])\n\n\t\t\treturn ['span', {}, 'html`', ...children, '`']\n\t\t},\n\t\thasBody() {\n\t\t\treturn false\n\t\t},\n\t})\n}\n\nexport type { Displayable, Renderable } from './shared.ts'\n","import { assert } from '../shared.ts'\n\nexport const DATA = 0\nexport const TAG_OPEN = 1\nexport const END_TAG_OPEN = 2\nexport const TAG_NAME = 3\nexport const BEFORE_ATTR_NAME = 4\nexport const ATTR_NAME = 5\nexport const AFTER_ATTR_NAME = 6\nexport const BEFORE_ATTR_VALUE = 7\nexport const ATTR_VALUE_DOUBLE_QUOTED = 8\nexport const ATTR_VALUE_SINGLE_QUOTED = 9\nexport const ATTR_VALUE_UNQUOTED = 10\nexport const AFTER_ATTR_VALUE = 11\nexport const SELF_CLOSING_START_TAG = 12\nexport const COMMENT2 = 13 // a comment2 is any type of comment that ends with \">\" and not \"-->\"\nexport const EXCLAIM = 14\nexport const COMMENT = 15\n\nexport type State =\n\t| typeof DATA\n\t| typeof TAG_OPEN\n\t| typeof END_TAG_OPEN\n\t| typeof TAG_NAME\n\t| typeof BEFORE_ATTR_NAME\n\t| typeof ATTR_NAME\n\t| typeof AFTER_ATTR_NAME\n\t| typeof BEFORE_ATTR_VALUE\n\t| typeof ATTR_VALUE_DOUBLE_QUOTED\n\t| typeof ATTR_VALUE_SINGLE_QUOTED\n\t| typeof ATTR_VALUE_UNQUOTED\n\t| typeof AFTER_ATTR_VALUE\n\t| typeof SELF_CLOSING_START_TAG\n\t| typeof COMMENT2\n\t| typeof EXCLAIM\n\t| typeof COMMENT\n\nconst ALPHA = /[a-z]/i\n\nexport function* lex(statics: TemplateStringsArray): Generator<[char: string, state: State], void, void> {\n\tassert(!statics.some(s => s.includes('\\0')))\n\n\tconst input = statics.join('\\0')\n\n\tlet state: State = DATA\n\tlet i = 0\n\n\twhile (i < input.length) {\n\t\tconst c = input[i++]\n\n\t\tswitch (state) {\n\t\t\tcase DATA: // https://html.spec.whatwg.org/multipage/parsing.html#data-state\n\t\t\t\tif (c === '<') state = TAG_OPEN\n\t\t\t\tbreak\n\n\t\t\tcase TAG_OPEN: // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n\t\t\t\tif (c === '!') state = EXCLAIM\n\t\t\t\telse if (c === '/') state = END_TAG_OPEN\n\t\t\t\telse if (c === '?') state = COMMENT2\n\t\t\t\telse {\n\t\t\t\t\tstate = TAG_NAME\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tcase END_TAG_OPEN: // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n\t\t\t\tif (c === '>') state = DATA\n\t\t\t\telse if (ALPHA.test(c)) {\n\t\t\t\t\tstate = TAG_NAME\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t} else {\n\t\t\t\t\tstate = COMMENT2\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tcase TAG_NAME: // https://html.spec.whatwg.org/multipage/parsing.html#tag-name-state\n\t\t\t\tif (c === '\\t' || c === '\\n' || c === '\\f' || c === ' ') state = BEFORE_ATTR_NAME\n\t\t\t\telse if (c === '/') state = SELF_CLOSING_START_TAG\n\t\t\t\telse if (c === '>') state = DATA\n\t\t\t\tbreak\n\n\t\t\tcase BEFORE_ATTR_NAME: // https://html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state\n\t\t\t\tif (c === '\\t' || c === '\\n' || c === '\\f' || c === ' ') {\n\t\t\t\t} else if (c === '/' || c === '>') {\n\t\t\t\t\tstate = AFTER_ATTR_NAME\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t} else {\n\t\t\t\t\tstate = ATTR_NAME\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tcase ATTR_NAME: // https://html.spec.whatwg.org/multipage/parsing.html#attribute-name-state\n\t\t\t\tif (c === '\\t' || c === '\\n' || c === '\\f' || c === ' ' || c === '/' || c === '>') {\n\t\t\t\t\tstate = AFTER_ATTR_NAME\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t} else if (c === '=') state = BEFORE_ATTR_VALUE\n\t\t\t\tbreak\n\n\t\t\tcase AFTER_ATTR_NAME: // https://html.spec.whatwg.org/multipage/parsing.html#after-attribute-name-state\n\t\t\t\tif (c === '\\t' || c === '\\n' || c === '\\f' || c === ' ') {\n\t\t\t\t} else if (c === '/') state = SELF_CLOSING_START_TAG\n\t\t\t\telse if (c === '=') state = BEFORE_ATTR_VALUE\n\t\t\t\telse if (c === '>') state = DATA\n\t\t\t\telse {\n\t\t\t\t\tstate = ATTR_NAME\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tcase BEFORE_ATTR_VALUE: // https://html.spec.whatwg.org/multipage/parsing.html#before-attribute-value-state\n\t\t\t\tif (c === '\\t' || c === '\\n' || c === '\\f' || c === ' ') {\n\t\t\t\t} else if (c === '\"') state = ATTR_VALUE_DOUBLE_QUOTED\n\t\t\t\telse if (c === \"'\") state = ATTR_VALUE_SINGLE_QUOTED\n\t\t\t\telse if (c === '>') state = DATA\n\t\t\t\telse {\n\t\t\t\t\tstate = ATTR_VALUE_UNQUOTED\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tcase ATTR_VALUE_DOUBLE_QUOTED: // https://html.spec.whatwg.org/multipage/parsing.html#attribute-value-(double-quoted)-state\n\t\t\t\tif (c === '\"') state = AFTER_ATTR_VALUE\n\t\t\t\tbreak\n\n\t\t\tcase ATTR_VALUE_SINGLE_QUOTED: // https://html.spec.whatwg.org/multipage/parsing.html#attribute-value-(single-quoted)-state\n\t\t\t\tif (c === \"'\") state = AFTER_ATTR_VALUE\n\t\t\t\tbreak\n\n\t\t\tcase ATTR_VALUE_UNQUOTED: // https://html.spec.whatwg.org/multipage/parsing.html#attribute-value-(unquoted)-state\n\t\t\t\tif (c === '\\t' || c === '\\n' || c === '\\f' || c === ' ') state = BEFORE_ATTR_NAME\n\t\t\t\telse if (c === '>') state = DATA\n\t\t\t\tbreak\n\n\t\t\tcase AFTER_ATTR_VALUE: // https://html.spec.whatwg.org/multipage/parsing.html#after-attribute-value-(quoted)-state\n\t\t\t\tif (c === '\\t' || c === '\\n' || c === '\\f' || c === ' ') state = BEFORE_ATTR_NAME\n\t\t\t\telse if (c === '/') state = SELF_CLOSING_START_TAG\n\t\t\t\telse if (c === '>') state = DATA\n\t\t\t\telse {\n\t\t\t\t\tstate = BEFORE_ATTR_NAME\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tcase SELF_CLOSING_START_TAG: // https://html.spec.whatwg.org/multipage/parsing.html#self-closing-start-tag-state\n\t\t\t\tif (c === '>') state = DATA\n\t\t\t\telse {\n\t\t\t\t\tstate = BEFORE_ATTR_NAME\n\t\t\t\t\ti--\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tcase COMMENT2: // https://html.spec.whatwg.org/multipage/parsing.html#bogus-comment-state\n\t\t\t\tif (c === '>') state = DATA\n\t\t\t\tbreak\n\n\t\t\tcase EXCLAIM: // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n\t\t\t\tif (c === '-' && input[i] === '-') {\n\t\t\t\t\ti++\n\t\t\t\t\tyield ['-', COMMENT]\n\t\t\t\t\tstate = COMMENT\n\t\t\t\t} else {\n\t\t\t\t\tstate = COMMENT2\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tcase COMMENT: // https://html.spec.whatwg.org/multipage/parsing.html#comment-state\n\t\t\t\tif (c === '-' && input[i] === '-' && input[i + 1] === '>') {\n\t\t\t\t\tyield ['-', COMMENT]\n\t\t\t\t\ti++\n\t\t\t\t\tyield ['-', COMMENT]\n\t\t\t\t\ti++\n\t\t\t\t\tyield ['>', COMMENT]\n\t\t\t\t\tstate = DATA\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tstate satisfies never\n\t\t}\n\n\t\tyield [c, state]\n\t}\n}\n","import { html, type HTML } from './index.ts'\nexport * as lexer from './shared/lexer.ts'\n\n/** @internal */\ndeclare global {\n\tvar __DEV__: boolean\n}\n\nexport interface ToString {\n\ttoString(): string\n}\n\nexport type Displayable = null | undefined | ToString | Node | Renderable | Iterable<Displayable> | HTML\nexport interface Renderable {\n\trender(): Displayable\n}\n\nexport function is_renderable(value: unknown): value is Renderable {\n\treturn typeof value === 'object' && value !== null && 'render' in value\n}\n\nexport function is_iterable(value: unknown): value is Iterable<unknown> {\n\treturn typeof value === 'object' && value !== null && Symbol.iterator in value\n}\n\nexport function assert(value: unknown, message?: string): asserts value {\n\tif (!__DEV__) return\n\tif (!value) {\n\t\tconst error = new Error(message ?? 'assertion failed')\n\t\tError.captureStackTrace?.(error, assert) // remove assert from the stack trace\n\t\tthrow error\n\t}\n}\n\nexport const html_tag: unique symbol = Symbol()\nexport function is_html(value: unknown): value is HTML {\n\treturn typeof value === 'object' && value !== null && html_tag in value\n}\n\nexport function single_part_template(part: Displayable): HTML {\n\treturn html`${part}`\n}\n"],"mappings":"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"}